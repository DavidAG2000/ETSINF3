(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    169924,       4606]
NotebookOptionsPosition[    167856,       4532]
NotebookOutlinePosition[    168259,       4548]
CellTagsIndexPosition[    168216,       4545]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Pr\[AAcute]ctica 2: Aut\[OAcute]matas Celulares", "Title",
 CellChangeTimes->{3.7030762582489953`*^9}],

Cell["\<\
Javier Rodr\[IAcute]guez Dom\[IAcute]nguez y Jaime Ferrando Huertas
\
\>", "Subsection",
 CellChangeTimes->{{3.7030762824833465`*^9, 3.703076291284532*^9}}],

Cell[CellGroupData[{

Cell["II \[Dash] Reconocedores de Lenguajes", "Chapter",
 CellChangeTimes->{3.7030763097784014`*^9}],

Cell[CellGroupData[{

Cell["\<\

Ejercicio 1:\
\>", "Section",
 CellChangeTimes->{{3.703076366874355*^9, 3.7030763765664206`*^9}}],

Cell["\<\
Implemente un m\[OAcute]dulo en Mathematica que, tomando como entrada un AFD \
proporcione como salida un AC unidireccional unidimensional que acepte el \
mismo lenguaje que el AFD mediante entrada paralela.

\
\>", "Text",
 CellChangeTimes->{{3.7030763898975124`*^9, 3.703076411402565*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "m\[OAcute]dulo", " ", "para", " ", "transformar", " ", "un", " ", "AFD", 
    " ", "en", " ", "un", " ", "aut\[OAcute]mata", " ", "celular"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"AfdToAc", "[", "automata_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "states", ",", "symbols", ",", "transitions", ",", "rules", ",", "i", 
        ",", "j", ",", "final"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"states", "=", 
        RowBox[{"automata", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"symbols", " ", "=", " ", 
        RowBox[{"automata", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"transitions", " ", "=", 
        RowBox[{"automata", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"final", " ", "=", " ", 
        RowBox[{"automata", "[", 
         RowBox[{"[", "5", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"rules", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "creamos", " ", "una", " ", "regla", " ", "por", " ", "cada", " ", 
         "combinaci\[OAcute]n", " ", "de", " ", "estados", " ", "existente"}],
         "*)"}], "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", 
          RowBox[{"Length", "[", "states", "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", "1"}], ",", 
            RowBox[{"j", "\[LessEqual]", 
             RowBox[{"Length", "[", "states", "]"}]}], ",", 
            RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"AppendTo", "[", 
              RowBox[{"rules", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"states", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", 
                 RowBox[{"states", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], ",", 
                 RowBox[{"states", "[", 
                  RowBox[{"[", "j", "]"}], "]"}]}], "}"}]}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "creamos", " ", "una", " ", "regla", " ", "por", " ", "cada", " ", 
         "combinaci\[OAcute]n", " ", "de", " ", "simbolos", " ", 
         "existente"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", 
          RowBox[{"Length", "[", "symbols", "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", "1"}], ",", 
            RowBox[{"j", "\[LessEqual]", 
             RowBox[{"Length", "[", "symbols", "]"}]}], ",", 
            RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"AppendTo", "[", 
              RowBox[{"rules", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"symbols", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", 
                 RowBox[{"symbols", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], ",", 
                 RowBox[{"symbols", "[", 
                  RowBox[{"[", "j", "]"}], "]"}]}], "}"}]}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "creamos", " ", "una", " ", "regla", " ", "por", " ", 
         "transici\[OAcute]n"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", 
          RowBox[{"Length", "[", "transitions", "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"rules", ",", 
            RowBox[{"transitions", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "devolvemos", " ", "el", " ", "aut\[OAcute]mata", " ", "formateado"}],
         "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Union", "[", "states", "]"}], ",", 
          RowBox[{"Union", "[", "rules", "]"}], ",", 
          RowBox[{"Union", "[", "final", "]"}]}], "}"}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.699169930017288*^9, 3.699169984701742*^9}, {
  3.699170531942176*^9, 3.6991705796335707`*^9}, {3.699170658691847*^9, 
  3.699170674912875*^9}, {3.699173779619443*^9, 3.699173942113896*^9}, {
  3.6991740017294416`*^9, 3.699174132351377*^9}, {3.699174235086546*^9, 
  3.6991744055434713`*^9}, {3.699175153940949*^9, 3.699175159739998*^9}, {
  3.703076580893423*^9, 3.7030766478930607`*^9}, {3.703076712515769*^9, 
  3.703076794189522*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sampleAutomata", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"q", ",", "p", ",", "r"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q", ",", "a", ",", "p"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"q", ",", "b", ",", "r"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"p", ",", "a", ",", "r"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"p", ",", "b", ",", "q"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", "a", ",", "r"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", "b", ",", "r"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", "q", "}"}], ",", 
    RowBox[{"{", "r", "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{3.7030765729875402`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"q", ",", "p", ",", "r"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"q", ",", "a", ",", "p"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "b", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "a", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "b", ",", "q"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "a", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "b", ",", "r"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", "q", "}"}], ",", 
   RowBox[{"{", "r", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.70307657453683*^9, 3.7030771438066835`*^9, 
  3.70324045350179*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sampleCelular", " ", "=", " ", 
  RowBox[{"AfdToAc", "[", "sampleAutomata", "]"}]}]], "Input",
 CellChangeTimes->{{3.699174450567689*^9, 3.6991744574738493`*^9}, {
  3.6991756584142923`*^9, 3.6991756638274508`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"p", ",", "q", ",", "r"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "a", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "a", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "b", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "a", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "b", ",", "q"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "p", ",", "p"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "q", ",", "q"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "r", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "a", ",", "p"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "b", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "p", ",", "p"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "q", ",", "q"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "r", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "a", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "b", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "p", ",", "p"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "q", ",", "q"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "r", ",", "r"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", "r", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.699254671053834*^9, 3.7030729141730237`*^9, 
  3.703077147965025*^9, 3.703240455762535*^9, 3.703241349965309*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\

Ejercicio 2:\
\>", "Section",
 CellChangeTimes->{{3.703077185728842*^9, 3.703077192943034*^9}}],

Cell["\<\
Implemente un m\[OAcute]dulo Mathematica que, tomando como entrada una cadena \
arbitraria, un AC que reconoce un lenguaje mediante entrada paralela en \
tiempo real y un estado de frontera q S, proporcione como salida True si el \
AC acepta la cadena y False en caso contrario.
\
\>", "Text",
 CellChangeTimes->{{3.703077210000379*^9, 3.7030772518188925`*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "M\[OAcute]dulo", " ", "para", " ", "calcular", " ", "el", " ", 
    "siguiente", " ", "estado", " ", "de", " ", "una", " ", "cadena", " ", 
    "de", " ", "forma", " ", "unidireccional"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"NextConfigOneWay", "[", 
     RowBox[{"estado_", ",", "regla_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "lenestado", ",", "i", ",", "doblete", ",", "sol", ",", "result"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"lenestado", " ", "=", " ", 
        RowBox[{"Length", "[", "estado", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"sol", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "se", " ", "calcula", " ", "el", " ", "resultado", " ", "de", " ", 
         "cada", " ", "c\[EAcute]lula", " ", "tneiendo", " ", "en", " ", 
         "cuenta", " ", "a", " ", "ella", " ", "y", " ", "la", " ", "de", " ",
          "su", " ", "izquierda"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "la", " ", "celda", " ", "1", " ", "no", " ", "se", " ", "tiene", 
          " ", "en", " ", "cuenta"}], ",", " ", 
         RowBox[{"ya", " ", "que", " ", "es", " ", "la", " ", "barrera"}]}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "2"}], ",", 
         RowBox[{"i", "\[LessEqual]", "lenestado"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"doblete", "=", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"estado", "[", 
              RowBox[{"[", 
               RowBox[{"i", "-", "1"}], "]"}], "]"}], ",", 
             RowBox[{"estado", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", "_"}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"result", " ", "=", " ", 
           RowBox[{"Cases", "[", 
            RowBox[{"regla", ",", "doblete"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"sol", ",", 
            RowBox[{
             RowBox[{"result", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"sol", "=", 
        RowBox[{"Prepend", "[", 
         RowBox[{"sol", ",", 
          RowBox[{"estado", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "se", " ", "devuelve", " ", "la", " ", "nueva", " ", "cadena"}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "sol", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.6991747131337423`*^9, 3.699174735825341*^9}, {
   3.699174775336409*^9, 3.6991749401603947`*^9}, 3.699176045238042*^9, {
   3.699176101469056*^9, 3.699176114269514*^9}, {3.699176145718202*^9, 
   3.699176208396612*^9}, {3.699176287719651*^9, 3.699176309469335*^9}, {
   3.699176425922741*^9, 3.699176426856494*^9}, 3.7030772552934046`*^9, 
   3.703078974655835*^9, {3.7032401339816437`*^9, 3.703240286289583*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"M\[OAcute]dulo", " ", "que"}], ",", " ", 
    RowBox[{"dado", " ", "un", " ", "aut\[OAcute]mata"}], ",", " ", 
    RowBox[{
    "una", " ", "palabra", " ", "y", " ", "un", " ", "s\[IAcute]molo", " ", 
     "que", " ", "actua", " ", "de", " ", "barrera", " ", "devuelve", " ", 
     "si", " ", "el", " ", "automata", " ", "reconoce", " ", "la", " ", 
     "palabra"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ReconoceRPOCA", "[", 
     RowBox[{"ac_", ",", "palabra_", ",", "q_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "s", ",", "rules", ",", "splus", ",", "n", ",", "word", ",", "i"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"s", "=", 
        RowBox[{"ac", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"rules", " ", "=", " ", 
        RowBox[{"ac", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"splus", " ", "=", " ", 
        RowBox[{"ac", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"n", " ", "=", " ", 
        RowBox[{"Length", "[", "palabra", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"word", " ", "=", " ", 
        RowBox[{"Prepend", "[", 
         RowBox[{"palabra", ",", "q"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "se", " ", "calculan", " ", "tantas", " ", "iteraciones", " ", "como",
          " ", "longitud", " ", "de", " ", "la", " ", "palabra"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", "n"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"word", " ", "=", " ", 
           RowBox[{"NextConfigOneWay", "[", 
            RowBox[{"word", ",", "rules"}], "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "se", " ", "devuelve", " ", "si", " ", "el", " ", "s\[IAcute]mbolo", 
         " ", "de", " ", "salida", " ", "pertenece", " ", "a", " ", "el", " ",
          "conjunto", " ", "de", " ", "finales"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"Return", " ", "[", 
        RowBox[{"MemberQ", "[", 
         RowBox[{"splus", ",", 
          RowBox[{"word", "[", 
           RowBox[{"[", 
            RowBox[{"n", "+", "1"}], "]"}], "]"}]}], "]"}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.699174975033485*^9, 3.699174980589233*^9}, {
  3.699175019572359*^9, 3.6991751100984983`*^9}, {3.699175170129184*^9, 
  3.699175279502447*^9}, {3.699175335494343*^9, 3.699175481658074*^9}, {
  3.699175532182108*^9, 3.699175640288588*^9}, {3.699175865782783*^9, 
  3.699175920456456*^9}, {3.699175953058114*^9, 3.699175977210894*^9}, {
  3.699176239563024*^9, 3.699176260912718*^9}, {3.699176312983857*^9, 
  3.699176342716935*^9}, {3.699176432729035*^9, 3.699176432934503*^9}, {
  3.69917651816358*^9, 3.699176537795912*^9}, {3.699176578818817*^9, 
  3.699176579136034*^9}, {3.7032402916517043`*^9, 3.7032404056976013`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"ReconoceRPOCA", "[", 
   RowBox[{"sampleCelular", ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "a", ",", "a", ",", "b"}], "}"}], ",", "q"}],
    "]"}]}]], "Input",
 CellChangeTimes->{{3.699175981856592*^9, 3.699175983256888*^9}, {
  3.699176548415275*^9, 3.6991765552000237`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.699175985975477*^9, 3.699176051546051*^9, 3.699176119705557*^9, 
   3.6991761515486593`*^9, 3.699176224204483*^9, 3.6991762637714*^9, {
   3.699176321117744*^9, 3.6991763458513727`*^9}, 3.6991764365591173`*^9, {
   3.6991765565795527`*^9, 3.6991765829997168`*^9}, 3.7030729219759603`*^9, 
   3.7032404652480865`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"ReconoceRPOCA", "[", 
   RowBox[{"sampleCelular", ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "a", ",", "b", ",", "a"}], "}"}], ",", "q"}],
    "]"}]}]], "Input",
 CellChangeTimes->{{3.703240472145337*^9, 3.7032404866219754`*^9}}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.703240487585553*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\

Ejercicio 3:\
\>", "Section",
 CellChangeTimes->{{3.7032405206840496`*^9, 3.703240527651184*^9}}],

Cell["\<\
Proporcione una construcci\[OAcute]n formal para obtener a partir de un AFD, \
un AC equivalente unidimensional bidireccional (vecindario {-1,0,1}) con \
entrada paralela. Implemente un m\[OAcute]dulo en Mathematica que lleve a \
cabo la construcci\[OAcute]n propuesta.
\
\>", "Text",
 CellChangeTimes->{{3.703240541270961*^9, 3.703240561816884*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "m\[OAcute]dulo", " ", "para", " ", "transformar", " ", "un", " ", "AFD", 
    " ", "en", " ", "un", " ", "aut\[OAcute]mata", " ", "celular", " ", "con",
     " ", "entrada", " ", "bidireccional"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"AfdToAcBidi", "[", "automata_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "states", ",", "symbols", ",", "celular", ",", "final", ",", "rules", 
        ",", "allsymbols", ",", "newrules", ",", "i", ",", "k"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"symbols", "=", 
        RowBox[{"automata", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "claculamos", " ", "el", " ", "automata", " ", "celular", " ", 
         "unidireccional", " ", "para", " ", "el", " ", "AFD", " ", "de", " ",
          "entrada"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"celular", "=", 
        RowBox[{"AfdToAc", "[", "automata", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"states", "=", 
        RowBox[{"celular", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"rules", "=", 
        RowBox[{"celular", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"final", "=", 
        RowBox[{"celular", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "vemos", " ", "todos", " ", "los", " ", "s\[IAcute]mbolos", " ", "y", 
         " ", "estados", " ", "que", " ", "lo", " ", "componen"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"allsymbols", "=", 
        RowBox[{"Union", "[", 
         RowBox[{"states", ",", 
          RowBox[{"Flatten", "[", "rules", "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"newrules", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "para", " ", "cada", " ", "una", " ", "de", " ", "las", " ", "reglas",
          " ", "del", " ", "automata", " ", "unidireccional"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", 
          RowBox[{"Length", "[", "rules", "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "a\[NTilde]adimos", " ", "todas", " ", "los", " ", "combinaciones",
             " ", "de", " ", "s\[IAcute]mbolos", " ", "en", " ", "el", " ", 
            "lado", " ", "derecho"}], ",", " ", 
           RowBox[{
           "as\[IAcute]", " ", "siempre", " ", "se", " ", 
            "reconocer\[AAcute]", " ", "como", " ", "es", " ", "debido"}], 
           ",", " ", 
           RowBox[{
           "independientemente", " ", "del", " ", "s\[IAcute]mbolo", " ", "a",
             " ", "la", " ", "derecha", " ", "del", " ", "centro"}]}], "*)"}],
          "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"k", "=", "1"}], ",", 
            RowBox[{"k", "\[LessEqual]", 
             RowBox[{"Length", "[", "allsymbols", "]"}]}], ",", 
            RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"AppendTo", "[", 
              RowBox[{"newrules", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"rules", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"rules", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", 
                 RowBox[{"allsymbols", "[", 
                  RowBox[{"[", "k", "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"rules", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "[", 
                  RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "se", " ", "devuelve", " ", "el", " ", "aut\[OAcute]mata", " ", 
         "bidireccional"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Union", "[", "states", "]"}], ",", 
          RowBox[{"Union", "[", "newrules", "]"}], ",", 
          RowBox[{"Union", "[", "final", "]"}]}], "}"}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.7032405885649114`*^9, 3.7032407763079247`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"sampleCelular", " ", "=", " ", 
   RowBox[{"AfdToAcBidi", "[", "sampleAutomata", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7032407909766707`*^9, 3.7032407919534607`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"p", ",", "q", ",", "r"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "a", ",", "a", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "a", ",", "b", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "a", ",", "p", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "a", ",", "q", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "a", ",", "r", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "a", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "b", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "p", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "q", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "r", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "a", ",", "a", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "a", ",", "b", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "a", ",", "p", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "a", ",", "q", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "a", ",", "r", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "b", ",", "a", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "b", ",", "b", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "b", ",", "p", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "b", ",", "q", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "b", ",", "r", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "a", ",", "a", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "a", ",", "b", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "a", ",", "p", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "a", ",", "q", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "a", ",", "r", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "b", ",", "a", ",", "q"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "b", ",", "b", ",", "q"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "b", ",", "p", ",", "q"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "b", ",", "q", ",", "q"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "b", ",", "r", ",", "q"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "p", ",", "a", ",", "p"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "p", ",", "b", ",", "p"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "p", ",", "p", ",", "p"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "p", ",", "q", ",", "p"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "p", ",", "r", ",", "p"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "q", ",", "a", ",", "q"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "q", ",", "b", ",", "q"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "q", ",", "p", ",", "q"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "q", ",", "q", ",", "q"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "q", ",", "r", ",", "q"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "r", ",", "a", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "r", ",", "b", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "r", ",", "p", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "r", ",", "q", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "r", ",", "r", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "a", ",", "a", ",", "p"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "a", ",", "b", ",", "p"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "a", ",", "p", ",", "p"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "a", ",", "q", ",", "p"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "a", ",", "r", ",", "p"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "b", ",", "a", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "b", ",", "b", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "b", ",", "p", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "b", ",", "q", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "b", ",", "r", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "p", ",", "a", ",", "p"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "p", ",", "b", ",", "p"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "p", ",", "p", ",", "p"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "p", ",", "q", ",", "p"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "p", ",", "r", ",", "p"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "q", ",", "a", ",", "q"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "q", ",", "b", ",", "q"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "q", ",", "p", ",", "q"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "q", ",", "q", ",", "q"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "q", ",", "r", ",", "q"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "r", ",", "a", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "r", ",", "b", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "r", ",", "p", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "r", ",", "q", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "r", ",", "r", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "a", ",", "a", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "a", ",", "b", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "a", ",", "p", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "a", ",", "q", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "a", ",", "r", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "b", ",", "a", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "b", ",", "b", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "b", ",", "p", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "b", ",", "q", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "b", ",", "r", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "p", ",", "a", ",", "p"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "p", ",", "b", ",", "p"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "p", ",", "p", ",", "p"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "p", ",", "q", ",", "p"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "p", ",", "r", ",", "p"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "q", ",", "a", ",", "q"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "q", ",", "b", ",", "q"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "q", ",", "p", ",", "q"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "q", ",", "q", ",", "q"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "q", ",", "r", ",", "q"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "r", ",", "a", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "r", ",", "b", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "r", ",", "p", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "r", ",", "q", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "r", ",", "r", ",", "r"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", "r", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.703240797472731*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\

Ejercicio 4:\
\>", "Section",
 CellChangeTimes->{{3.703240861620407*^9, 3.7032408682046995`*^9}}],

Cell["\<\
Implemente un m\[OAcute]dulo Mathematica que muestre la secuencia de \
computaci\[OAcute]n que se lleva a cabo en el m\[OAcute]dulo propuesto en la \
actividad (2) mediante un diagrama espaciotemporal.
\
\>", "Text",
 CellChangeTimes->{{3.7032408910461035`*^9, 3.703240899834588*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "m\[OAcute]dulo", " ", "para", " ", "imprimir", " ", "el", " ", "diagrama",
     " ", "espaciotemporal", " ", "de", " ", "la", " ", "computaci\[OAcute]n",
     " ", "de", " ", "una", " ", "palabra", " ", "por", " ", "un", " ", 
    "automata", " ", "celular", " ", "unidimensional"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"RPOCAPlot", " ", "[", 
     RowBox[{"ac_", ",", "palabra_", ",", "q_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "s", ",", "rules", ",", "splus", ",", "n", ",", "word", ",", "i", ",", 
        "print", ",", "items", ",", "colors", ",", "colorpattern"}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"s", "=", 
        RowBox[{"ac", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"rules", " ", "=", " ", 
        RowBox[{"ac", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"splus", " ", "=", " ", 
        RowBox[{"ac", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"n", " ", "=", " ", 
        RowBox[{"Length", "[", "palabra", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "a\[NTilde]adimos", " ", "el", " ", "s\[IAcute]mbolo", " ", "de", " ",
          "barrera", " ", "al", " ", "principio", " ", "de", " ", "la", " ", 
         "palabra"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"word", " ", "=", " ", 
        RowBox[{"Prepend", "[", 
         RowBox[{"palabra", ",", "q"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"print", " ", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "a", " ", "la", " ", "hora", " ", "de", " ", "imprimir", " ", "la", 
          " ", "palabra"}], ",", " ", 
         RowBox[{"quitamos", " ", "la", " ", "barrera"}]}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"PrependTo", "[", 
        RowBox[{"print", ",", 
         RowBox[{"Rest", "[", "word", "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "por", " ", "cada", " ", "s\[IAcute]mbolo", " ", "de", " ", "la", " ",
          "palabra", " ", "hacemos", " ", "una", " ", "iteraci\[OAcute]n"}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", "n"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"word", " ", "=", " ", 
           RowBox[{"NextConfigOneWay", "[", 
            RowBox[{"word", ",", "rules"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"PrependTo", "[", 
           RowBox[{"print", ",", 
            RowBox[{"Rest", "[", "word", "]"}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "generamos", " ", "tantos", " ", "colores", " ", "como", " ", 
         "simbolos", " ", "diferentes", " ", "existan"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"items", "=", 
        RowBox[{"Union", "[", 
         RowBox[{"Flatten", "[", "rules", "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"colors", "=", 
        RowBox[{"ColorList", "[", 
         RowBox[{"Length", "[", "items", "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"colorpattern", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "a", " ", "cada", " ", "s\[IAcute]mbolo", " ", "le", " ", "asignamos",
          " ", "un", " ", "color", " ", "diferente"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", 
          RowBox[{"Length", "[", "items", "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"colorpattern", ",", 
            RowBox[{
             RowBox[{"items", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", 
             RowBox[{"colors", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "imprimimos", " ", "la", " ", "computaci\[OAcute]n", " ", "de", " ", 
         "la", " ", "palabra", " ", "usando", " ", "los", " ", "colores"}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Return", " ", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ArrayPlot", "[", 
           RowBox[{"print", ",", 
            RowBox[{"ColorRules", "\[Rule]", "colorpattern"}]}], "]"}], ",", 
          " ", "colorpattern"}], "}"}], "]"}], ";"}]}], "\[IndentingNewLine]",
      "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.699176722464183*^9, 3.699176767407194*^9}, {
  3.69917682990233*^9, 3.699176897664583*^9}, {3.699251747909808*^9, 
  3.699251805659013*^9}, {3.69925186933007*^9, 3.6992521668262725`*^9}, {
  3.6992545960906534`*^9, 3.6992545992785826`*^9}, {3.6992547701343145`*^9, 
  3.699254792467286*^9}, {3.6992550004335675`*^9, 3.6992550006946125`*^9}, {
  3.699255076597022*^9, 3.699255084175453*^9}, {3.6992551295667763`*^9, 
  3.699255134926159*^9}, {3.7032409127754135`*^9, 3.703241149651047*^9}, {
  3.703241430898386*^9, 3.703241449834245*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "m\[OAcute]dulo", " ", "para", " ", "generar", " ", "un", " ", 
    "n\[UAcute]mero", " ", "dado", " ", "de", " ", "colores"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ColorList", "[", "numb_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "sol", ",", "i", ",", "j", ",", "k", ",", "increase", ",", "parts"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"calculamos", " ", "los", " ", "incrementos"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"parts", " ", "=", 
        RowBox[{"Floor", "[", 
         RowBox[{"CubeRoot", "[", 
          RowBox[{"numb", "-", "1"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"increase", " ", "=", " ", 
        RowBox[{"1", "/", "parts"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"sol", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "aumentamos", " ", "cada", " ", "uno", " ", "de", " ", "los", " ", 
         "valores", " ", "RGB", " ", "segun", " ", "el", " ", "incremento"}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "0"}], ",", 
         RowBox[{"i", "\[LessEqual]", "1"}], ",", 
         RowBox[{"i", "=", 
          RowBox[{"i", "+", "increase"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", "0"}], ",", 
            RowBox[{"j", "\[LessEqual]", "1"}], ",", 
            RowBox[{"j", "=", 
             RowBox[{"j", "+", "increase"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"k", "=", "0"}], ",", 
               RowBox[{"k", "\[LessEqual]", "1"}], ",", 
               RowBox[{"k", "=", 
                RowBox[{"k", "+", "increase"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"AppendTo", "[", 
                 RowBox[{"sol", ",", 
                  RowBox[{"{", 
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"i", ",", "j", ",", "k"}], "]"}], "}"}]}], "]"}], 
                ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "los", " ", "devolvemos", " ", "en", " ", "orden", " ", "aleatorio"}],
         "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"RandomSample", "[", "sol", "]"}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.699177360502385*^9, 3.699177629758128*^9}, {
   3.699177684500991*^9, 3.699177715864841*^9}, {3.699177756611619*^9, 
   3.699177802698537*^9}, {3.6992511385388947`*^9, 3.699251141773285*^9}, 
   3.699251196882642*^9, {3.6992513428353767`*^9, 3.69925139413188*^9}, {
   3.6992514697797737`*^9, 3.699251470610781*^9}, {3.6992515550932064`*^9, 
   3.6992515552151732`*^9}, {3.7032411566326036`*^9, 
   3.7032412116507535`*^9}, {3.70324128324658*^9, 3.7032413252464724`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"ColorList", "[", "28", "]"}]}]], "Input",
 CellChangeTimes->{{3.699177545841455*^9, 3.699177553188279*^9}, {
   3.699177697745118*^9, 3.6991777214616127`*^9}, 3.699177765099613*^9, {
   3.699251404084993*^9, 3.6992514280535765`*^9}, {3.6992515079205265`*^9, 
   3.6992515869319363`*^9}, 3.7032413696271377`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 
           Rational[1, 3], 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.2222222222222222, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1/3, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
            Rational[1, 3], 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 
      Rational[1, 3], 0],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
           Rational[1, 3], 0, 
           Rational[1, 3]], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0.2222222222222222, 0., 0.2222222222222222],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[1/3, 0, 1/3]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
            Rational[1, 3], 0, 
            Rational[1, 3]]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[
      Rational[1, 3], 0, 
      Rational[1, 3]],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 
           Rational[2, 3], 
           Rational[2, 3]], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.4444444444444444, 0.4444444444444444],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 2/3, 2/3]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
            Rational[2, 3], 
            Rational[2, 3]]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 
      Rational[2, 3], 
      Rational[2, 3]],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
           Rational[1, 3], 
           Rational[2, 3], 1], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[
         0.2222222222222222, 0.4444444444444444, 0.6666666666666666],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[1/3, 2/3, 1]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
            Rational[1, 3], 
            Rational[2, 3], 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[
      Rational[1, 3], 
      Rational[2, 3], 1],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
           Rational[2, 3], 1, 
           Rational[2, 3]], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[
         0.4444444444444444, 0.6666666666666666, 0.4444444444444444],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[2/3, 1, 2/3]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
            Rational[2, 3], 1, 
            Rational[2, 3]]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[
      Rational[2, 3], 1, 
      Rational[2, 3]],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
           Rational[2, 3], 
           Rational[2, 3], 
           Rational[2, 3]], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[
         0.4444444444444444, 0.4444444444444444, 0.4444444444444444],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[2/3, 2/3, 2/3]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
            Rational[2, 3], 
            Rational[2, 3], 
            Rational[2, 3]]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[
      Rational[2, 3], 
      Rational[2, 3], 
      Rational[2, 3]],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 
           Rational[1, 3], 
           Rational[1, 3]], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.2222222222222222, 0.2222222222222222],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1/3, 1/3]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
            Rational[1, 3], 
            Rational[1, 3]]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 
      Rational[1, 3], 
      Rational[1, 3]],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 1, 
           Rational[2, 3]], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[
         0.6666666666666666, 0.6666666666666666, 0.4444444444444444],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[1, 1, 2/3]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 
            Rational[2, 3]]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 1, 
      Rational[2, 3]],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
           Rational[2, 3], 1, 1], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[
         0.4444444444444444, 0.6666666666666666, 0.6666666666666666],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[2/3, 1, 1]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
            Rational[2, 3], 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[
      Rational[2, 3], 1, 1],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 1], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.6666666666666666],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 1]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 1],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 
           Rational[2, 3], 
           Rational[1, 3]], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.4444444444444444, 0.2222222222222222],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 2/3, 1/3]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
            Rational[2, 3], 
            Rational[1, 3]]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 
      Rational[2, 3], 
      Rational[1, 3]],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 0, 
           Rational[1, 3]], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0.6666666666666666, 0., 0.2222222222222222],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[1, 0, 1/3]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 
            Rational[1, 3]]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 
      Rational[1, 3]],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 1, 
           Rational[1, 3]], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[
         0.6666666666666666, 0.6666666666666666, 0.2222222222222222],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[1, 1, 1/3]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 
            Rational[1, 3]]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 1, 
      Rational[1, 3]],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
           Rational[1, 3], 1, 
           Rational[2, 3]], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[
         0.2222222222222222, 0.6666666666666666, 0.4444444444444444],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[1/3, 1, 2/3]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
            Rational[1, 3], 1, 
            Rational[2, 3]]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[
      Rational[1, 3], 1, 
      Rational[2, 3]],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
           Rational[2, 3], 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0.4444444444444444, 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[2/3, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
            Rational[2, 3], 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[
      Rational[2, 3], 1, 0],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
           Rational[2, 3], 0, 
           Rational[1, 3]], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0.4444444444444444, 0., 0.2222222222222222],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[2/3, 0, 1/3]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
            Rational[2, 3], 0, 
            Rational[1, 3]]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[
      Rational[2, 3], 0, 
      Rational[1, 3]],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
           Rational[1, 3], 0, 
           Rational[2, 3]], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0.2222222222222222, 0., 0.4444444444444444],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[1/3, 0, 2/3]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
            Rational[1, 3], 0, 
            Rational[2, 3]]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[
      Rational[1, 3], 0, 
      Rational[2, 3]],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
           Rational[2, 3], 1, 
           Rational[1, 3]], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[
         0.4444444444444444, 0.6666666666666666, 0.2222222222222222],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[2/3, 1, 1/3]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
            Rational[2, 3], 1, 
            Rational[1, 3]]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[
      Rational[2, 3], 1, 
      Rational[1, 3]],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
           Rational[2, 3], 
           Rational[2, 3], 
           Rational[1, 3]], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[
         0.4444444444444444, 0.4444444444444444, 0.2222222222222222],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[2/3, 2/3, 1/3]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
            Rational[2, 3], 
            Rational[2, 3], 
            Rational[1, 3]]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[
      Rational[2, 3], 
      Rational[2, 3], 
      Rational[1, 3]],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
           Rational[1, 3], 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0.2222222222222222, 0., 0.6666666666666666],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[1/3, 0, 1]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
            Rational[1, 3], 0, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[
      Rational[1, 3], 0, 1],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
           Rational[2, 3], 
           Rational[1, 3], 
           Rational[1, 3]], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[
         0.4444444444444444, 0.2222222222222222, 0.2222222222222222],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[2/3, 1/3, 1/3]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
            Rational[2, 3], 
            Rational[1, 3], 
            Rational[1, 3]]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[
      Rational[2, 3], 
      Rational[1, 3], 
      Rational[1, 3]],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
           Rational[1, 3], 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0.2222222222222222, 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[1/3, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
            Rational[1, 3], 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[
      Rational[1, 3], 1, 0],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
           Rational[1, 3], 
           Rational[2, 3], 
           Rational[1, 3]], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[
         0.2222222222222222, 0.4444444444444444, 0.2222222222222222],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[1/3, 2/3, 1/3]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
            Rational[1, 3], 
            Rational[2, 3], 
            Rational[1, 3]]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[
      Rational[1, 3], 
      Rational[2, 3], 
      Rational[1, 3]],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
           Rational[2, 3], 
           Rational[2, 3], 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0.4444444444444444, 0.4444444444444444, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[2/3, 2/3, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
            Rational[2, 3], 
            Rational[2, 3], 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[
      Rational[2, 3], 
      Rational[2, 3], 0],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
           Rational[2, 3], 
           Rational[1, 3], 1], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[
         0.4444444444444444, 0.2222222222222222, 0.6666666666666666],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[2/3, 1/3, 1]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
            Rational[2, 3], 
            Rational[1, 3], 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[
      Rational[2, 3], 
      Rational[1, 3], 1],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
           Rational[1, 3], 
           Rational[1, 3], 1], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[
         0.2222222222222222, 0.2222222222222222, 0.6666666666666666],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[1/3, 1/3, 1]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
            Rational[1, 3], 
            Rational[1, 3], 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[
      Rational[1, 3], 
      Rational[1, 3], 1],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
           Rational[2, 3], 
           Rational[2, 3], 1], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[
         0.4444444444444444, 0.4444444444444444, 0.6666666666666666],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[2/3, 2/3, 1]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
            Rational[2, 3], 
            Rational[2, 3], 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[
      Rational[2, 3], 
      Rational[2, 3], 1],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 
           Rational[2, 3]], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.4444444444444444],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 2/3]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 
            Rational[2, 3]]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 
      Rational[2, 3]],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 
           Rational[2, 3], 1], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[
         0.6666666666666666, 0.4444444444444444, 0.6666666666666666],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[1, 2/3, 1]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
            Rational[2, 3], 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 
      Rational[2, 3], 1],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
           Rational[2, 3], 
           Rational[1, 3], 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0.4444444444444444, 0.2222222222222222, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[2/3, 1/3, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
            Rational[2, 3], 
            Rational[1, 3], 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[
      Rational[2, 3], 
      Rational[1, 3], 0],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0., 0.6666666666666666],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 0, 1]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 0, 1],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
           Rational[1, 3], 1, 
           Rational[1, 3]], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[
         0.2222222222222222, 0.6666666666666666, 0.2222222222222222],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[1/3, 1, 1/3]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
            Rational[1, 3], 1, 
            Rational[1, 3]]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[
      Rational[1, 3], 1, 
      Rational[1, 3]],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 
           Rational[1, 3], 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0.6666666666666666, 0.2222222222222222, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[1, 1/3, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
            Rational[1, 3], 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 
      Rational[1, 3], 0],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 
           Rational[1, 3], 1], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.2222222222222222, 0.6666666666666666],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1/3, 1]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
            Rational[1, 3], 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 
      Rational[1, 3], 1],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
           Rational[2, 3], 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0.4444444444444444, 0., 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[2/3, 0, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
            Rational[2, 3], 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[
      Rational[2, 3], 0, 0],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0., 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 0, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 0, 0],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 0, 
           Rational[1, 3]], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0., 0.2222222222222222],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 0, 1/3]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 
            Rational[1, 3]]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 0, 
      Rational[1, 3]],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
           Rational[1, 3], 
           Rational[2, 3], 
           Rational[2, 3]], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[
         0.2222222222222222, 0.4444444444444444, 0.4444444444444444],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[1/3, 2/3, 2/3]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
            Rational[1, 3], 
            Rational[2, 3], 
            Rational[2, 3]]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[
      Rational[1, 3], 
      Rational[2, 3], 
      Rational[2, 3]],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 0, 
           Rational[2, 3]], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0., 0.4444444444444444],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 0, 2/3]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 
            Rational[2, 3]]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 0, 
      Rational[2, 3]],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 
           Rational[2, 3], 
           Rational[2, 3]], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[
         0.6666666666666666, 0.4444444444444444, 0.4444444444444444],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[1, 2/3, 2/3]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
            Rational[2, 3], 
            Rational[2, 3]]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 
      Rational[2, 3], 
      Rational[2, 3]],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 
           Rational[1, 3], 
           Rational[2, 3]], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.2222222222222222, 0.4444444444444444],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1/3, 2/3]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
            Rational[1, 3], 
            Rational[2, 3]]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 
      Rational[1, 3], 
      Rational[2, 3]],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[1, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 1, 0],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 1, 1], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[
         0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[1, 1, 1]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 1, 1],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0.6666666666666666, 0., 0.6666666666666666],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[1, 0, 1]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 1],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[1, 0, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 0],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 
           Rational[1, 3], 
           Rational[2, 3]], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[
         0.6666666666666666, 0.2222222222222222, 0.4444444444444444],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[1, 1/3, 2/3]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
            Rational[1, 3], 
            Rational[2, 3]]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 
      Rational[1, 3], 
      Rational[2, 3]],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 
           Rational[2, 3], 1], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.4444444444444444, 0.6666666666666666],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 2/3, 1]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
            Rational[2, 3], 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 
      Rational[2, 3], 1],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
           Rational[1, 3], 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0.2222222222222222, 0., 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[1/3, 0, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
            Rational[1, 3], 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[
      Rational[1, 3], 0, 0],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 
           Rational[1, 3]], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.2222222222222222],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 1/3]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 
            Rational[1, 3]]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 
      Rational[1, 3]],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 
           Rational[2, 3], 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.4444444444444444, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 2/3, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
            Rational[2, 3], 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 
      Rational[2, 3], 0],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
           Rational[1, 3], 
           Rational[1, 3], 
           Rational[1, 3]], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[
         0.2222222222222222, 0.2222222222222222, 0.2222222222222222],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[1/3, 1/3, 1/3]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
            Rational[1, 3], 
            Rational[1, 3], 
            Rational[1, 3]]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[
      Rational[1, 3], 
      Rational[1, 3], 
      Rational[1, 3]],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 
           Rational[1, 3], 1], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[
         0.6666666666666666, 0.2222222222222222, 0.6666666666666666],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[1, 1/3, 1]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
            Rational[1, 3], 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 
      Rational[1, 3], 1],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
           Rational[1, 3], 
           Rational[1, 3], 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0.2222222222222222, 0.2222222222222222, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[1/3, 1/3, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
            Rational[1, 3], 
            Rational[1, 3], 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[
      Rational[1, 3], 
      Rational[1, 3], 0],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
           Rational[2, 3], 0, 
           Rational[2, 3]], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0.4444444444444444, 0., 0.4444444444444444],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[2/3, 0, 2/3]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
            Rational[2, 3], 0, 
            Rational[2, 3]]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[
      Rational[2, 3], 0, 
      Rational[2, 3]],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 
           Rational[1, 3], 
           Rational[1, 3]], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[
         0.6666666666666666, 0.2222222222222222, 0.2222222222222222],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[1, 1/3, 1/3]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
            Rational[1, 3], 
            Rational[1, 3]]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 
      Rational[1, 3], 
      Rational[1, 3]],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
           Rational[1, 3], 
           Rational[2, 3], 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0.2222222222222222, 0.4444444444444444, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[1/3, 2/3, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
            Rational[1, 3], 
            Rational[2, 3], 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[
      Rational[1, 3], 
      Rational[2, 3], 0],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
           Rational[2, 3], 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0.4444444444444444, 0., 0.6666666666666666],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[2/3, 0, 1]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
            Rational[2, 3], 0, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[
      Rational[2, 3], 0, 1],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 
           Rational[2, 3], 
           Rational[1, 3]], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[
         0.6666666666666666, 0.4444444444444444, 0.2222222222222222],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[1, 2/3, 1/3]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
            Rational[2, 3], 
            Rational[1, 3]]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 
      Rational[2, 3], 
      Rational[1, 3]],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
           Rational[2, 3], 
           Rational[1, 3], 
           Rational[2, 3]], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[
         0.4444444444444444, 0.2222222222222222, 0.4444444444444444],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[2/3, 1/3, 2/3]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
            Rational[2, 3], 
            Rational[1, 3], 
            Rational[2, 3]]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[
      Rational[2, 3], 
      Rational[1, 3], 
      Rational[2, 3]],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 0, 
           Rational[2, 3]], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0.6666666666666666, 0., 0.4444444444444444],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[1, 0, 2/3]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 
            Rational[2, 3]]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 
      Rational[2, 3]],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
           Rational[1, 3], 
           Rational[1, 3], 
           Rational[2, 3]], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[
         0.2222222222222222, 0.2222222222222222, 0.4444444444444444],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[1/3, 1/3, 2/3]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
            Rational[1, 3], 
            Rational[1, 3], 
            Rational[2, 3]]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[
      Rational[1, 3], 
      Rational[1, 3], 
      Rational[2, 3]],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
           Rational[1, 3], 1, 1], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[
         0.2222222222222222, 0.6666666666666666, 0.6666666666666666],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[1/3, 1, 1]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
            Rational[1, 3], 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[
      Rational[1, 3], 1, 1],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 
           Rational[2, 3], 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0.6666666666666666, 0.4444444444444444, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[1, 2/3, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
            Rational[2, 3], 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 
      Rational[2, 3], 0],
     Editable->False,
     Selectable->False], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.699177817420059*^9, {3.6992514063036623`*^9, 3.6992514308972673`*^9}, {
   3.699251498927574*^9, 3.699251509795492*^9}, {3.699251560798131*^9, 
   3.6992515883578997`*^9}, 3.703072932218397*^9, {3.7032413291267824`*^9, 
   3.703241333467188*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"RPOCAPlot", "[", 
   RowBox[{"sampleCelular", ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "a", ",", "a", ",", "b"}], "}"}], ",", "q"}],
    "]"}]}]], "Input",
 CellChangeTimes->{{3.699254711199869*^9, 3.6992547123875074`*^9}, 
   3.7032413709600134`*^9, {3.7032414967889676`*^9, 3.7032415044419284`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBgA2JWIAaxIeCDPQMKQOeji+NST6k5uAC97UVXN1jsxWUP
vewlZN9A2YsQBwB7JDNx
     "], {{0, 0}, {5, 6}}, {0, 1}],
    Frame->Automatic,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", 
      RowBox[{"{", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0.6666666666666666, 0., 0.6666666666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          "RGBColor[1, 0, 1]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[1, 0, 1],
        Editable->False,
        Selectable->False], "}"}]}], ",", 
     RowBox[{"b", "\[Rule]", 
      RowBox[{"{", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0., 0., 0.6666666666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          "RGBColor[0, 0, 1]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0, 0, 1],
        Editable->False,
        Selectable->False], "}"}]}], ",", 
     RowBox[{"p", "\[Rule]", 
      RowBox[{"{", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          "RGBColor[1, 0, 0]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[1, 0, 0],
        Editable->False,
        Selectable->False], "}"}]}], ",", 
     RowBox[{"q", "\[Rule]", 
      RowBox[{"{", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0, 1, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0., 0.6666666666666666, 0.6666666666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          "RGBColor[0, 1, 1]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0, 1, 1],
        Editable->False,
        Selectable->False], "}"}]}], ",", 
     RowBox[{"r", "\[Rule]", 
      RowBox[{"{", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          "RGBColor[0, 1, 0]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0, 1, 0],
        Editable->False,
        Selectable->False], "}"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.699254713559548*^9, 3.6992547362500677`*^9}, 
   3.6992547967538657`*^9, {3.699254858232222*^9, 3.6992548703496637`*^9}, {
   3.699255004420726*^9, 3.699255017703207*^9}, 3.69925513881684*^9, 
   3.7030729343927298`*^9, {3.70324133674079*^9, 3.703241384787733*^9}, 
   3.70324145412881*^9, {3.703241505325717*^9, 3.7032415110935774`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"RPOCAPlot", "[", 
   RowBox[{"sampleCelular", ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "a", ",", "b", ",", "a"}], "}"}], ",", "q"}],
    "]"}]}]], "Input",
 CellChangeTimes->{{3.703241390276249*^9, 3.703241394293533*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBgA2JWIAaxIeCDPSqNSxwXTal6dDBQ9uICA20vIffQy15C
6gfKXgQAACbeNv4=
     "], {{0, 0}, {5, 6}}, {0, 1}],
    Frame->Automatic,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", 
      RowBox[{"{", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          "RGBColor[1, 1, 0]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[1, 1, 0],
        Editable->False,
        Selectable->False], "}"}]}], ",", 
     RowBox[{"b", "\[Rule]", 
      RowBox[{"{", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 1, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          "RGBColor[1, 1, 1]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[1, 1, 1],
        Editable->False,
        Selectable->False], "}"}]}], ",", 
     RowBox[{"p", "\[Rule]", 
      RowBox[{"{", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          "RGBColor[1, 0, 0]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[1, 0, 0],
        Editable->False,
        Selectable->False], "}"}]}], ",", 
     RowBox[{"q", "\[Rule]", 
      RowBox[{"{", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0., 0., 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          "RGBColor[0, 0, 0]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 0]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0, 0, 0],
        Editable->False,
        Selectable->False], "}"}]}], ",", 
     RowBox[{"r", "\[Rule]", 
      RowBox[{"{", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0., 0., 0.6666666666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          "RGBColor[0, 0, 1]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0, 0, 1],
        Editable->False,
        Selectable->False], "}"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.703241395627048*^9, {3.7032414649233074`*^9, 3.703241470509633*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{958, 988},
WindowMargins->{{-1002, Automatic}, {Automatic, 0}},
SpellingDictionaries->{"CorrectWords"->{"Reconocedores"}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 108, 1, 101, "Title"],
Cell[691, 25, 166, 4, 79, "Subsection"],
Cell[CellGroupData[{
Cell[882, 33, 100, 1, 61, "Chapter"],
Cell[CellGroupData[{
Cell[1007, 38, 108, 4, 111, "Section"],
Cell[1118, 44, 301, 7, 87, "Text"],
Cell[1422, 53, 5509, 126, 506, "Input"],
Cell[CellGroupData[{
Cell[6956, 183, 836, 24, 30, "Input"],
Cell[7795, 209, 815, 24, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8647, 238, 239, 4, 30, "Input"],
Cell[8889, 244, 1717, 47, 50, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[10655, 297, 106, 4, 111, "Section"],
Cell[10764, 303, 371, 7, 87, "Text"],
Cell[11138, 312, 3461, 79, 316, "Input"],
Cell[14602, 393, 3376, 72, 316, "Input"],
Cell[CellGroupData[{
Cell[18003, 469, 350, 8, 50, "Input"],
Cell[18356, 479, 372, 6, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18765, 490, 301, 7, 50, "Input"],
Cell[19069, 499, 74, 1, 30, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[19192, 506, 108, 4, 111, "Section"],
Cell[19303, 512, 360, 7, 68, "Text"],
Cell[19666, 521, 4986, 114, 449, "Input"],
Cell[CellGroupData[{
Cell[24677, 639, 229, 4, 50, "Input"],
Cell[24909, 645, 8122, 198, 240, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[33080, 849, 108, 4, 111, "Section"],
Cell[33191, 855, 294, 6, 68, "Text"],
Cell[33488, 863, 5682, 127, 563, "Input"],
Cell[39173, 992, 3333, 76, 354, "Input"],
Cell[CellGroupData[{
Cell[42531, 1072, 369, 6, 50, "Input"],
Cell[42903, 1080, 105778, 2946, 88, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[148718, 4031, 375, 8, 50, "Input"],
Cell[149096, 4041, 9310, 236, 231, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[158443, 4282, 295, 7, 50, "Input"],
Cell[158741, 4291, 9063, 235, 231, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

